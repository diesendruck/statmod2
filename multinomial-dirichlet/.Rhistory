dev.off()
# Gibbs Sampler
require("gtools") ## for generating from a Dirichlet distribution
require("coda") ## for convergence diagonstics
#x <- scan("galaxies.dta")
x <- as.matrix(read.csv("galaxies.csv" ,header=F))
n <- length(x)
J <- 6
xgrid <- seq(from=min(x),to=max(x),length=100)
## hyperparameters for Mu.
m0 <- 20
v0 <- 100
## hyperparameters for (1/sig2).
# 1/sig2 ~ Ga(5, 0.05) s.t. E(1/sig2) = 100
a0 <- 4
b0 <- 12
## hyperparameters for dirichlet weights.
alpha <- 1
sample.s <- function(w, mu, sig2) {
## sample s[i] from p(s[i] | ...)
n <- length(x)
sd <- sqrt(sig2)
s <- rep(0,n) # initialize
for(i in 1:n){
pr <- w*dnorm(x[i], m=mu, sd=sd)
s[i] <- sample(1:J, 1, replace=T, prob=pr)
}
return(s)
}
sample.mu <- function(s, w, sig2) {
## sample mu[j]
mu <- rep(0, J) # initialize
for (j in 1:J) {
Aj <- which(s==j) # makes vector of indices
nj <- length(Aj)
sig2.j <- sig2[j]
if (nj==0) {
m <- 0; V <- v0;
} else {
xbar <- mean(x[Aj])
V <- 1/(1/v0 + nj/sig2.j)
m <- V*(m0/v0 + xbar*nj/sig2.j)
}
mu[j] <- rnorm(1, m=m, sd=sqrt(V))
}
return(mu)
}
sample.w <- function(s) {
## sample w
a <- rep(0,J) # initialize
for(j in 1:J) {
Aj <- which(s==j)
nj <- length(Aj)
a[j] <- alpha+nj
}
w <- rdirichlet(1, a)
w <- c(w)
return(w)
}
sample.sig <- function(s, mu) {
## sample sig2
sig2 <- rep(0, J)
for (j in 1:J) {
Aj <- which(s==j) # makes vector of indices
nj <- length(Aj)
mu.j <- mu[j]
if (nj==0) {
a1 <- a0; b1 <- b0;
} else {
S2 <- sum((x[Aj]-mu.j)^2)
a1 <- a0 + nj/2
b1 <- b0 + S2/2
}
sig2[j] <- 1.0/rgamma(1, shape=a1, rate=b1)
}
return(sig2)
}
f <- function(xi, w, mu, sig2) {
y <- 0
for (j in 1:J){
y <- y+w[j]*dnorm(xi, m=mu[j], sd=sqrt(sig2[j]))
}
return(y)
}
init <- function() {
# use some exploratory data analysis for initial values of the parameters
# initialize s with a hierarchical tree, cut for J clusters
hc <- hclust(dist(x), "ave")
s <- cutree(hc,k=J)
# initialize mu as mean for each cluster
#   mu <- NULL; clusters <- split(x,s)
#   for (i in 1:length(clusters)) {
#     mu[i] <- mean(unlist(clusters[i]))
#   }
#   sig2 <- var(x-mu[s])
#   sig2 <- rep(sig2, J) # ADAPTATION for multiple independent variances.
#   w <- table(s)/n
# MO'S VERSIONS OF INITIAL VARS
mu <- rnorm(J, m=m0, sd=sqrt(v0))
sig2 <- 1/rgamma(J, a0, b0)
w <- rdirichlet(1, rep(alpha, J))
return(th=list(mu=mu, sig2=sig2, w=w, s=s))
}
gibbs <- function(n.iter=1000) {
## initialize the parameters
th <- init()
s <- th$s; mu <- th$mu; sig2 <- th$sig2; w <- th$w
## set up lists to save simulations
slist <- NULL
mlist <- NULL
flist <- NULL
siglist <- NULL
wlist <- NULL
for(iter in 1:n.iter){
s <- sample.s(w, mu, sig2)
mu <- sample.mu(s, w, sig2)
w <- sample.w(s)
sig2 <- sample.sig(s, mu)
## save summaries of current simulation
slist <- rbind(slist, s)
mlist <- rbind(mlist, mu)
siglist <- c(siglist, sig2)
wlist <- rbind(wlist,w)
flist <- rbind(flist, f(xgrid, w, mu, sig2))
}
return(list(s=slist, m=mlist, f=flist, sig=siglist, w=wlist))
}
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
par(mfrow=c(1,2))
plot(1:length(x), x, main="Sample Data",
xlab="Galaxy", ylab="Velocity")
o <- order(colMeans(mlist))
boxplot(mlist[,o], main="Posterior Group Means",
xlab="Group", ylab="Velocity")
dev.off()
# Gibbs Sampler
require("gtools") ## for generating from a Dirichlet distribution
require("coda") ## for convergence diagonstics
#x <- scan("galaxies.dta")
x <- as.matrix(read.csv("galaxies.csv" ,header=F))
n <- length(x)
J <- 6
xgrid <- seq(from=min(x),to=max(x),length=100)
## hyperparameters for Mu.
m0 <- 20
v0 <- 100
## hyperparameters for (1/sig2).
# 1/sig2 ~ Ga(5, 0.05) s.t. E(1/sig2) = 100
a0 <- 4
b0 <- 1
## hyperparameters for dirichlet weights.
alpha <- 1
sample.s <- function(w, mu, sig2) {
## sample s[i] from p(s[i] | ...)
n <- length(x)
sd <- sqrt(sig2)
s <- rep(0,n) # initialize
for(i in 1:n){
pr <- w*dnorm(x[i], m=mu, sd=sd)
s[i] <- sample(1:J, 1, replace=T, prob=pr)
}
return(s)
}
sample.mu <- function(s, w, sig2) {
## sample mu[j]
mu <- rep(0, J) # initialize
for (j in 1:J) {
Aj <- which(s==j) # makes vector of indices
nj <- length(Aj)
sig2.j <- sig2[j]
if (nj==0) {
m <- 0; V <- v0;
} else {
xbar <- mean(x[Aj])
V <- 1/(1/v0 + nj/sig2.j)
m <- V*(m0/v0 + xbar*nj/sig2.j)
}
mu[j] <- rnorm(1, m=m, sd=sqrt(V))
}
return(mu)
}
sample.w <- function(s) {
## sample w
a <- rep(0,J) # initialize
for(j in 1:J) {
Aj <- which(s==j)
nj <- length(Aj)
a[j] <- alpha+nj
}
w <- rdirichlet(1, a)
w <- c(w)
return(w)
}
sample.sig <- function(s, mu) {
## sample sig2
sig2 <- rep(0, J)
for (j in 1:J) {
Aj <- which(s==j) # makes vector of indices
nj <- length(Aj)
mu.j <- mu[j]
if (nj==0) {
a1 <- a0; b1 <- b0;
} else {
S2 <- sum((x[Aj]-mu.j)^2)
a1 <- a0 + nj/2
b1 <- b0 + S2/2
}
sig2[j] <- 1.0/rgamma(1, shape=a1, rate=b1)
}
return(sig2)
}
f <- function(xi, w, mu, sig2) {
y <- 0
for (j in 1:J){
y <- y+w[j]*dnorm(xi, m=mu[j], sd=sqrt(sig2[j]))
}
return(y)
}
init <- function() {
# use some exploratory data analysis for initial values of the parameters
# initialize s with a hierarchical tree, cut for J clusters
hc <- hclust(dist(x), "ave")
s <- cutree(hc,k=J)
# initialize mu as mean for each cluster
#   mu <- NULL; clusters <- split(x,s)
#   for (i in 1:length(clusters)) {
#     mu[i] <- mean(unlist(clusters[i]))
#   }
#   sig2 <- var(x-mu[s])
#   sig2 <- rep(sig2, J) # ADAPTATION for multiple independent variances.
#   w <- table(s)/n
# MO'S VERSIONS OF INITIAL VARS
mu <- rnorm(J, m=m0, sd=sqrt(v0))
sig2 <- 1/rgamma(J, a0, b0)
w <- rdirichlet(1, rep(alpha, J))
return(th=list(mu=mu, sig2=sig2, w=w, s=s))
}
gibbs <- function(n.iter=1000) {
## initialize the parameters
th <- init()
s <- th$s; mu <- th$mu; sig2 <- th$sig2; w <- th$w
## set up lists to save simulations
slist <- NULL
mlist <- NULL
flist <- NULL
siglist <- NULL
wlist <- NULL
for(iter in 1:n.iter){
s <- sample.s(w, mu, sig2)
mu <- sample.mu(s, w, sig2)
w <- sample.w(s)
sig2 <- sample.sig(s, mu)
## save summaries of current simulation
slist <- rbind(slist, s)
mlist <- rbind(mlist, mu)
siglist <- c(siglist, sig2)
wlist <- rbind(wlist,w)
flist <- rbind(flist, f(xgrid, w, mu, sig2))
}
return(list(s=slist, m=mlist, f=flist, sig=siglist, w=wlist))
}
# GET RESULTS
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
par(mfrow=c(1,2))
plot(1:length(x), x, main="Sample Data",
xlab="Galaxy", ylab="Velocity")
o <- order(colMeans(mlist))
boxplot(mlist[,o], main="Posterior Group Means",
xlab="Group", ylab="Velocity")
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
par(mfrow=c(1,2))
plot(1:length(x), x, main="Sample Data",
xlab="Galaxy", ylab="Velocity")
o <- order(colMeans(mlist))
boxplot(mlist[,o], main="Posterior Group Means",
xlab="Group", ylab="Velocity")
mlist[,o]
boxplot(tail(mlist[,o],1000), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
boxplot(tail(mlist[,o],1500), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
boxplot(mlist[,o]), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
boxplot(mlist[,o]), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
boxplot(mlist[,o], main="Posterior Group Means",
xlab="Group", ylab="Velocity")
dim(mlist)
dim(mlist[,o])
dim(tail(mlist[,o], 1000)
)
dev.off()
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
# Fitted Mixtures Plot
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
# PLOT RESULTS
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
par(mfrow=c(1,2))
plot(1:length(x), x, main="Sample Data",
xlab="Galaxy", ylab="Velocity")
o <- order(colMeans(mlist))
boxplot(tail(mlist[,o],1000), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
dev.off()
results <- gibbs(n.iter=2000)
slist <- results$s
mlist <- results$m
flist <- results$f
siglist <- results$sig
wlist <- results$w
plt.f <- function(flist, col=1, lty=1, add=F) {
fbar <- apply(flist,2,mean)
if (!add) {
hist(x, bty="l", xlab="X", ylab="E(f | data)",
main="Fitted Mixtures - Galaxies", prob=T,
breaks=30)
}
lines(xgrid, fbar, type="l", lwd=3, col=col, lty=lty)
}
plt.f(flist)
plot(1:n, colMeans(slist), main="Means of Posterior Group Assignments",
xlab="Galaxy", ylab="Mean Posterior Assignment")
par(mfrow=c(1,2))
plot(1:length(x), x, main="Sample Data",
xlab="Galaxy", ylab="Velocity")
o <- order(colMeans(mlist))
boxplot(tail(mlist[,o],1000), main="Posterior Group Means",
xlab="Group", ylab="Velocity")
