ylab=bquote(mu[1]), ylim=c(-8,8),
main=bquote("Group"~.(p)))
}
P <- results$BETAS.BY.GENE
MU <- results$MU
TAUSQ <- results$TAUSQ
gene.names <- unique(D$gene)
# Show traceplots for Mu's and Tau's.
par(mfrow=c(3, 2))
n <- dim(MU)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(MU)[1]
for (p in 1:count) {
plot(its, MU[p,1,it], xlab="Iteration", type="l",
ylab=bquote(mu[0]), ylim=c(2, 22),
main=bquote("Group"~.(p)))
plot(its, MU[p,2,it], xlab="Iteration", type="l",
ylab=bquote(mu[1]), ylim=c(-8,8),
main=bquote("Group"~.(p)))
}
par(mfrow=c(3,1))
for (p in 1:count) {
plot(its, TAUSQ[it,p], xlab="Iteration", type="l",
ylab=bquote((tau^2)[.(p)]), ylim=c(0,50),
main=bquote("Group"~.(p)))
}
dim(P)
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {
for (g in 1:num.groups) {
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
bymedian <- with(m, reorder(m$gene, m$value, median))
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Beta"~.(p-1)~"Values by Gene in Group"~.(g)),
yaxt="n")
if (p==1) {
axis(2, at=seq(6, 16, by=2), las=2)
} else if (p==2) {
axis(2, at=seq(-3, 3, by=0.2), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {
for (g in 1:num.groups) {
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
bymedian <- with(m, reorder(m$gene, m$value, median))
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Beta"~.(p-1)~"Values by Gene in Group"~.(g)))#,
#             yaxt="n")
#     if (p==1) {
#       axis(2, at=seq(6, 16, by=2), las=2)
#     } else if (p==2) {
#       axis(2, at=seq(-3, 3, by=0.2), las=2)
#     }
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {
for (g in 1:num.groups) {
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Beta"~.(p-1)~"Values by Gene in Group"~.(g)),
ylim=c(2,22))
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Beta"~.(p-1)~"Values by Gene in Group"~.(g)),
ylim=c(-8,8))
}
#,
#             yaxt="n")
#     if (p==1) {
#       axis(2, at=seq(6, 16, by=2), las=2)
#     } else if (p==2) {
#       axis(2, at=seq(-3, 3, by=0.2), las=2)
#     }
}
}
for (p in 1:count) {
for (g in 1:num.groups) {
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22))
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Beta"~.(p-1)~"Values by Gene in Group"~.(g)),
ylim=c(-8,8))
}
}
}
for (p in 1:count) {
for (g in 1:num.groups) {
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22))
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-8,8))
}
}
}
g
g=1
p=1
m1
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
data.to.plot
dim(data.to.plot)
names(data.to.plot) <- c("a","b","c","d","e")
data.to.plot
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
m <- melt(data.to.plot)[c(2, 3)]
m
dim(m)
905/12
ind <- group.indices[[g]]
data.to.plot <- t(P[ind,p,it])
melt(data.to.plot)
181*5
head(melt(data.to.plot))
m <- melt(data.to.plot)[c(2, 3)]
names(m) <- c("gene", "value")
m
names <- group.names[ind]
group.gene.names <- gene.names[ind]
group.gene.names
D
group.gene.names
group.mean.coefs
group.gene.names
lm.coefs
m
head(m)
ind
data.to.plot
m
head(m,30)
m[m$gene==1] <- group.gene.names[1]      # Replace numbers with gene names.
head(m,30)
group.gene.names[1]
m[m$gene==1] <- toString(group.gene.names[1])      # Replace numbers with gene names.
m[m$gene=="1"] <- group.gene.names[1]      # Replace numbers with gene names.
m$gene=="1"
m$gene[m$gene=="1"] <- group.gene.names[1]      # Replace numbers with gene names.
m
m$gene[m$gene=="1"] <- toString(group.gene.names[1])      # Replace numbers with gene names.
m$gene[m$gene=="1"] <- toString(group.gene.names[1])      # Replace numbers with gene names.
head(m)
ind <- group.indices[[g]]                # Get indices of this group.
data.to.plot <- t(P[ind,p,it])           # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]         # Melt into boxplottable form.
names(m) <- c("gene", "value")           # Rename for reference.
group.gene.names <- gene.names[ind]      # Get gene names in this group.
head(m)
m$gene[m$gene=="1"] <- c("", group.gene.names[1])     # Replace numbers with gene names.
c("", group.gene.names[1])
gene.names[ind]
group.gene.names <- gene.names[ind]      # Get gene names in this group.
group.gene.names
m$gene[m$gene=="1"] <- as.character(group.gene.names[1])     # Replace numbers with gene names.
head(m)
ind <- group.indices[[g]]                # Get indices of this group.
data.to.plot <- t(P[ind,p,it])           # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]         # Melt into boxplottable form.
names(m) <- c("gene", "value")           # Rename for reference.
group.gene.names <- gene.names[ind]      # Get gene names in this group.
group.gene.names
q <-  as.list(group.gene.names)
q
q[[1]]
head(m)
group.gene.names <- as.list(gene.names[ind])      # Get gene names in this group.
m$gene[m$gene=="1"] <- group.gene.names[[1]]     # Replace numbers with gene names.
head(m)
group.gene.names[[1]]
group.gene.names[[1]][1]
group.gene.names <- as.list(gene.names[ind])      # Get gene names in this group.
m$gene[m$gene=="1"] <- group.gene.names[[1]][1]     # Replace numbers with gene names.
ind <- group.indices[[g]]                # Get indices of this group.
data.to.plot <- t(P[ind,p,it])           # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]         # Melt into boxplottable form.
names(m) <- c("gene", "value")           # Rename for reference.
group.gene.names <- as.list(gene.names[ind])      # Get gene names in this group.
m$gene[m$gene=="1"] <- group.gene.names[[1]][1]     # Replace numbers with gene names.
head(m)
m <- melt(data.to.plot)[c(2, 3)]         # Melt into boxplottable form.
names(m) <- c("gene", "value")           # Rename for reference.
group.gene.names <- as.list(gene.names[ind])      # Get gene names in this group.
m$gene[m$gene=="1"] <- group.gene.names[[1]]     # Replace numbers with gene names.
head(m)
gene.names
gene.names <- unique(data$gene)
gene.names
gene.names <- sapply(data$gene, unique)
gene.names
gene.names <- unique(data$gene)
gene.names <- vector(unique(data$gene))
gene.names <- vec(unique(data$gene))
gene.names <- as.vector(unique(data$gene))
gene.names
num.names <- length(gene.names)
ind <- group.indices[[g]]                # Get indices of this group.
data.to.plot <- t(P[ind,p,it])           # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]         # Melt into boxplottable form.
names(m) <- c("gene", "value")           # Rename for reference.
group.gene.names <- gene.names[ind]      # Get gene names in this group.
group.gene.names
head(m)
m$gene[m$gene=="1"] <- group.gene.names[1]   # Replace numbers with gene names.
head(m)
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
length(gp.gene.names)
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
m
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22))
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-8,8))
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m, xlab="Gene",
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-8,8), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-8,8), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-2,2), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(2,22), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-1,1), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {
m$gene[m$gene==i] <- gp.gene.names[i]   # Replace numbers with gene names.
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(5,17), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote("Value of Beta"~.(p)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-0.5,0.8), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {      # Replace numbers with gene names.
m$gene[m$gene==i] <- gp.gene.names[i]
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote(beta~.(p-1)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(5,17), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote(beta.(p-1)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-0.5,0.8), las=2)
}
}
}
par(mfrow=c(2,3))
num.groups <- 3
n <- dim(P)[3]
# Burn first 10th and thin by 5.
it <- seq(floor(0.1*n), n, 5)
count <- dim(P)[2]
for (p in 1:count) {                          # Do one at a time: b0, b1.
for (g in 1:num.groups) {                   # Find the b_i groupwise.
ind <- group.indices[[g]]                 # Get indices of this group.
data.to.plot <- t(P[ind,p,it])            # Fetch b_i's for that group.
m <- melt(data.to.plot)[c(2, 3)]          # Melt into boxplottable form.
names(m) <- c("gene", "value")            # Rename for reference.
gp.gene.names <- gene.names[ind]          # Get gene names in this group.
for (i in 1:length(gp.gene.names)) {      # Replace numbers with gene names.
m$gene[m$gene==i] <- gp.gene.names[i]
}
bymedian <- with(m, reorder(m$gene, m$value, median))
if (p==1) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote(beta~.(p-1)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(5,17), las=2)
} else if (p==2) {
boxplot(m$value ~ bymedian, data=m,
ylab=bquote(beta~.(p-1)),
main=bquote("Group"~.(g)~beta[.(p-1)]),
ylim=c(-0.5,0.8), las=2)
}
}
}
xyplot(log2exp~time | gene, data=data)
xyplot(log2exp~time | group, data=data)
xyplot(log2exp~time | gene, data=data)
